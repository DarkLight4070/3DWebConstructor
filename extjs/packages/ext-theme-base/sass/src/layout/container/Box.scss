.#{$prefix}box-layout-ct {
    overflow: hidden;
    zoom: 1;
}

.#{$prefix}box-target {
    position: absolute;
    // This width for the "CSS container box" of the box child items gives them the room
    // they need to avoid being "crushed" (aka, "wrapped"). On Opera, elements cannot be
    // wider than 32767px or else they break the scrollWidth (it becomes == offsetWidth)
    // and you cannot scroll the content.
    width: 20000px;
    // On IE quirks and IE6/7 strict, a text-align:center style trickles down to this el
    // at times and will cause it to move off the left edge. The easy fix is to just always
    // set left:0 here (right:0 in rtl mode). The top:0 part is just being paranoid.
    // The requirement for targetEl is that its origin align with innerCt... this ensures
    // that it does!
    top: 0;
    left: 0;
    // If we don't give the element a height, it does not always participate in the scrollWidth.
    height: 1px;
}

@if $include-rtl {
    .#{$prefix}rtl.#{$prefix}box-target {
        left: auto;
        right: 0;
    }
}

.#{$prefix}box-inner {
    overflow:hidden;

    zoom:1;

    position:relative;
    left:0;
    top:0;
}

.#{$prefix}horizontal-box-overflow-body {
    float: left;
}

.#{$prefix}box-scroller {
    position: relative;
    background-repeat: no-repeat;
}

.#{$prefix}box-scroller-left,
.#{$prefix}box-scroller-right {
    float: left;
    height: 100%;
    z-index: 5;
}

.#{$prefix}box-scroller-top,
.#{$prefix}box-scroller-bottom {
    .#{$prefix}box-scroller {
        line-height: 0;
        font-size: 0;
        background-position: center 0;
    }
}

.#{$prefix}box-menu-after {
    float: right;
}

@if $include-rtl {
    .#{$prefix}rtl.#{$prefix}box-menu-after {
        float: left;
    }
}